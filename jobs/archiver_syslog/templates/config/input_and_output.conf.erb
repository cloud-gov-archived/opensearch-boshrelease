input {
  <% if_p("logstash_ingestor.syslog.port") do |port| %>
    tcp
    {
      add_field => [ "type", "syslog" ]
      host => "0.0.0.0"
      port => "<%= port %>"
      <% if_p("logstash_ingestor.syslog.use_keepalive") do |v| %>
      tcp_keep_alive => <%= v %>
      <% end %>
    }
    udp {
      add_field => [ "type", "syslog" ]
      host => "0.0.0.0"
      port => "<%= port %>"
    }
    <% end %>

  <% if_p("logstash_ingestor.syslog_tls.port") do | tls_port | %>

    tcp {
    add_field => [ "type", "syslog" ]
    host => "0.0.0.0"
    port => "<%= tls_port %>"
    ssl_enabled => true
    <% if p("logstash_ingestor.syslog_tls.skip_ssl_validation") %>
    ssl_verify => false
    <% end %>
    <% if p("logstash.ssl_client_authentication") %>
    ssl_client_authentication =>  "<%= p("logstash.ssl_client_authentication") %>"
    <% end %>
    ssl_certificate_authorities => ["/var/vcap/jobs/archiver_syslog/config/ssl/opensearch.ca"]
    ssl_certificate => "/var/vcap/jobs/archiver_syslog/config/syslog_tls.crt"
    ssl_key => "/var/vcap/jobs/archiver_syslog/config/syslog_tls.key"
    <% if_p("logstash_ingestor.syslog_tls.use_keepalive") do |v| %>
    tcp_keep_alive => <%= v %>
    <% end %>
  }
  <% end %>

  <% if_p("logstash_ingestor.relp.port") do | port | %>
  relp {
    add_field => { "_logstash_input" => "relp" }
    host => "0.0.0.0"
    port => "<%= port %>"
  }
  <% end %>
}

filter {
  # drop empty logs (eg: monit connection healthcheck)
  ruby {
    code => 'event.cancel if event.get("message") == "\u0000"'
  }
  <% if_p('logstash_ingestor.filters') do |filters| %><%= filters %><% end %>
}

output {
    <% if p("logstash_ingestor.debug") %>
        stdout {
            codec => "json"
        }
    <% end %>

    <% p('logstash_ingestor.outputs').each do | output | %>
        <%= output['plugin'] %> {
        <% output['options'].each do | k, v | %>
          <%= k %> => <%= v.inspect %>
        <% end %>
        }
    <% end %>
}
